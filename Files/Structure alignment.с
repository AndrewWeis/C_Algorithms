#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>


#pragma pack(push, 1)
typedef struct files {
	char name[21]; // –ò–º—è —Ñ–∞–π–ª–∞, —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ –ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤, —Ü–∏—Ñ—Ä –∏ —Å–∏–º–≤–æ–ª–æ–≤ —Ç–æ—á–∫–∏.
	unsigned long long int S; // –†–∞–∑–º–µ—Ä ùëÜùëñ —Ñ–∞–π–ª–∞ –≤ –±–∞–π—Ç–∞—Ö
	char Dirictoria; // –ë–∞–π—Ç —Ä–∞–≤–µ–Ω 1, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ —è–≤–ª—è–µ—Ç—Å—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π, –∏ 0 –∏–Ω–∞—á–µ.
	unsigned long long int C; // –ú–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ ùê∂ùëñ, –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –±—ã–ª —Å–æ–∑–¥–∞–Ω
	unsigned long long int M; // –ú–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ ùëÄùëñ, –∫–æ–≥–¥–∞ —Ñ–∞–π–ª –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑
	char hide; // –ë–∞–π—Ç —Ä–∞–≤–µ–Ω 1, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å–∫—Ä—ã—Ç—ã–π, –∏ 0 –∏–Ω–∞—á–µ.
} files;
#pragma pack(pop)

files file[1002];

int main() {
	long long int A; // –Ω–µ —Ä–∞–Ω—å—à–µ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
	long long int B; //  –∏—Å–∫–æ–º—ã–π —Ñ–∞–π–ª –Ω–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ–∑–∂–µ —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ 
	FILE* input = fopen("input.bin", "rb");
	FILE* output = fopen("output.bin", "wb");
	int number, sum = 0, N = 0;
	int sorted[1001] = { 0 };

	fread(&N, sizeof(int), 1, input);
	fread(&A, sizeof(long long int), 1, input);
	fread(&B, sizeof(long long int), 1, input);

	for (int i = 0; i < N; i++) 
		fread(&file[i], sizeof(files), 1, input);
	

	for (int i = 0; i < N - 1; i++) {
		for (int j = i + 1; j < N; j++) {

			if (strcmp(file[i].name, file[j].name) > 0) {
				file[1001] = file[i];
				file[i] = file[j];
				file[j] = file[1001];
			}
		}
	}

	int k = 0;
	for (int i = 0; i < N; i++) {
		int hide = file[i].hide;
		int dirictoria = file[i].Dirictoria;
		if (dirictoria == 0 && hide == 0 && file[i].C >= A && file[i].M <= B) {
			sorted[k] = i;
			k++;
		}
	}

	for (int i = 0; i < k; i++)
		fwrite(&file[sorted[i]], sizeof(files), 1, output);

	fclose(input);
	fclose(output);
	return 0;
}
